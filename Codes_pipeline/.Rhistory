passed=c()
for(i in colnames(data)[-1]){
t<-wilcox.test(data[[i]]~data$ExacerbatorState,exact=TRUE)
if(t$p.value<=args[3]){passed=c(passed,i)}
}
print("Selected Features")
print(passed)
colnames(data)
data.summary()
summary(data)
warnings()
print("Selected Features")
print(passed)
data<-read.csv("./../Results/Datasets/II.csv",row.names = 1,sep='\t')
#Modifying dtype
class=colnames(data)[1]
data[[class]]<-factor(data[[class]])
passed=c()
for(i in colnames(data)[-1]){
t<-wilcox.test(data[[i]]~data$ExacerbatorState,exact=TRUE)
if(t$p.value<=args[3]){passed=c(passed,i)}
}
print("Selected Features")
print(passed)
passed=c(passed,class)
f_sel_data<-data[,passed]
View(f_sel_data)
data<-read.csv("./../Results/Datasets/III.csv",row.names = 1,sep='\t')
#Modifying dtype
class=colnames(data)[1]
data[[class]]<-factor(data[[class]])
passed=c()
data[[class]]
for(i in colnames(data)[-1]){
t<-wilcox.test(data[[i]]~data$ExacerbatorState,exact=TRUE)
if(t$p.value<=args[3]){passed=c(passed,i)}
}
passed=c()
for(i in colnames(data)[-1]){
t<-wilcox.test(data[[i]]~data[[class]],exact=TRUE)
if(t$p.value<=args[3]){passed=c(passed,i)}
}
print("Selected Features")
print(passed)
passed=c(passed,class)
f_sel_data<-data[,passed]
View(f_sel_data)
data<-read.csv("./../Results/Datasets/I.csv",row.names = 1,sep='\t')
data<-read.csv("./../Results/Datasets/I.csv",row.names = 1,sep='\t')
data<-read.csv("./../Results/Datasets/I.csv",row.names = 1,sep='\t')
#Modifying dtype
categ<-c("ExacerbatorState","Sex","ICS.use","Oral.ab","Smoker","Aetiology","BCOS","Pseudomonas.culture.positive","Bronchodialator","Mucolytic","Oral.steroids","Long.term.antibiotics")
for(i in categ){data[[i]]<-factor(data[[i]])}
data[["Other.organisms.isolated.in.sputum"]]<-NULL #Not proper
passed=c()
for(i in colnames(data)[-1]){
if(is.numeric(data[[i]])){
t<-wilcox.test(data[[i]]~data$ExacerbatorState)}
else{
t<-chisq.test(data[[i]],data$ExacerbatorState,simulate.p.value = TRUE)
}
if(t$p.value<=0.05){passed=c(passed,i)}
}
print("Selected Features")
print(passed)
colnames(data)
passed=c()
for(i in colnames(data)[-1]){
if(is.numeric(data[[i]])){
t<-wilcox.test(data[[i]]~data$ExacerbatorState)}
else{
t<-chisq.test(data[[i]],data$ExacerbatorState,simulate.p.value = TRUE)
}
if(t$p.value<=0.05){passed=c(passed,i)}
}
print("Selected Features")
print(passed)
f_sel_data<-data[,passed]
data<-read.csv("./../Results/Datasets/I.csv",row.names = 1,sep='\t')
#Modifying dtype
categ<-c("ExacerbatorState","Sex","ICS.use","Oral.ab","Smoker","Aetiology","BCOS","Pseudomonas.culture.positive","Bronchodialator","Mucolytic","Oral.steroids","Long.term.antibiotics")
for(i in categ){data[[i]]<-factor(data[[i]])}
data[["Other.organisms.isolated.in.sputum"]]<-NULL #Not proper
passed=c()
for(i in colnames(data)[-1]){
if(is.numeric(data[[i]])){
t<-wilcox.test(data[[i]]~data$ExacerbatorState)}
else{
t<-chisq.test(data[[i]],data$ExacerbatorState,simulate.p.value = TRUE)
}
if(t$p.value<=0.05){passed=c(passed,i)}
}
print("Selected Features")
print(passed)
f_sel_data<-data[,passed]
View(f_sel_data)
is.na(f_sel_data)
colSums(is.na(f_sel_data))
rowSums(is.na(f_sel_data))
rowSums(is.na(f_sel_data))>1
rowSums(is.na(f_sel_data))>=1
row.names(f_sel_data)[rowSums(is.na(f_sel_data))>=1]
colSums(is.na(f_sel_data))
which(is.na(f_sel_data), arr.ind=TRUE)
which(is.na(f_sel_data), arr.ind=FALSE)
?which
which(is.na(f_sel_data), arr.ind=TRUE, useNames = TRUE)
which(is.na(f_sel_data), arr.ind=TRUE, useNames = TRUE)
missing = which(is.na(f_sel_data), arr.ind=TRUE, useNames = TRUE)
as.data.frame(missing)
missing[3]
missing[,3]
missing[,2]
colnames(f_sel_data)[missing[,2]]
missing[,2]<-colnames(f_sel_data)[missing[,2]]
missing
missing[,1]
missing[,1]<-NULL
missing[,1]<-NA
missing
1320 NA  "Bronchodialator"
TBS006  NA  "Bronchodialator"
TBS663  NA  "Bronchodialator"
TBS670  NA  "Bronchodialator"
TTS1131 NA  "Bronchodialator"
TBS656  NA  "Bronchodialator"
TBS479  NA  "Bronchodialator"
TTS
missing
writ.csv(missing,"tmp_missing.csv")
write.csv(missing,"tmp_missing.csv")
colSums(is.na(f_sel_data))
data<-read.csv("./../Results/Datasets/II.csv",row.names = 1,sep='\t')
library(lionessR)
library(SummarizedExperiment)
data$ExacerbatorState<-NULL
data<-as.matrix(data)
data<-t(data)
?lioness
spearman<-function(data){
sim<-cor(data,method="spearman")
return(sim)
}
spearman(data)
data
spearman<-function(data){
sim<-cor(t(data),method="spearman")
return(sim)
}
spearman(data)
data<-read.csv("./../Results/Datasets/II.csv",row.names = 1,sep='\t')
spearman<-function(data){
sim<-cor(t(data),method="spearman")
return(sim)
}
library(lionessR)
library(SummarizedExperiment)
data<-read.csv(args[1],row.names = 1,sep='\t')
data$ExacerbatorState<-NULL
data<-as.matrix(data)
res<-lioness(as.matrix(data),spearman)
?cor
elseif
elif
source("pearson.R")
df=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/Data_21Dec20/species_data.csv",row.names =1)
y1=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/METADATA/data_194.csv",row.names=1)
y2=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/METADATA/data_test.csv",row.names=1)
df
df=(df/rowSums(df)
)*100
df
y1
y=cbind.data.frame([y1,y2])
y=cbind.data.frame(y1,y2)
y=rbind.data.frame(y1,y2)
y
y$ExacerbatorState
y=
replace(y$ExacerbatorState,c("NonEx","Exacerbator","FreqEx"),c(0,0,1))
y
y1=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/METADATA/data_194.csv",row.names=1)
y2=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/METADATA/data_test.csv",row.names=1)
df=df/rowSums(df)
y=rbind.data.frame(y1,y2)
replace(y$ExacerbatorState,c("NonEx","Exacerbator","FreqEx"),c(0,0,1))
?replace
factor(y$ExacerbatorState)
factor(y$ExacerbatorState,levels = c(0,1,0))
ifelse(y$Exacerbations<=3,1,0)
ifelse(y$Exacerbations<=3,0,1)
y$ExacerbatorState<-factor(ifelse(y$Exacerbations<=3,0,1))
y$ExacerbatorState
train=df[row.names(y)]
train=df[row.names(y),]
train
?merge
colnames(data)
#!/usr/bin/env Rscript
args = commandArgs(trailingOnly=TRUE)
library(lionessR)
library(SummarizedExperiment)
df=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/Data_21Dec20/species_data.csv",row.names =1)
y1=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/METADATA/data_194.csv",row.names=1)
y2=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/METADATA/data_test.csv",row.names=1)
df=df/rowSums(df)
y=rbind.data.frame(y1,y2)
y$ExacerbatorState<-factor(ifelse(y$Exacerbations<=3,0,1))
data=df[row.names(y),]
data
rowSums(data)
rm(c(df,y1,y2))
rm(c("df","y1","y2"))
rm(df,y1,y2)
#Reading the dataset
# data=read.csv("./Microbes.csv",row.names = 1)
library(foreach)
library(doParallel)
library(abind)
?makeExtends
?makeCluster
?registerDoParallel
?parApply
?parApply
?p.adjust
runif(1, i, 100)
runif(1, 1, 100)
runif(1, 2, 100)
runif(1, 0, 1)
runif(1, 0, 1)
runif(2, 0, 1)
runif(1, 0, 1)
data<-read.csv("./../Results/Datasets/VI.csv",row.names = 1)
colnames(data)
#Exacerbation data
y1=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/METADATA/data_194.csv",row.names=1)
y2=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/METADATA/data_test.csv",row.names=1)
y=rbind.data.frame(y1,y2)
y$ExacerbatorState<-factor(ifelse(y$Exacerbations<=3,0,1))
y$ExacerbatorState
data<-data[row.names(y),]
data<-data[row.names(y),]
data$ExacerbatorState<-y$ExacerbatorState
rm(y,y1,y2)
data
class(data$ExacerbatorState)
data$ExacerbatorState
colnames(data)[22501]
colnames(data)[dim(data)[2]]
data<-read.csv("./../Results/Datasets/VI.csv",row.names = 1)
#Exacerbation data
y1=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/METADATA/data_194.csv",row.names=1)
y2=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/METADATA/data_test.csv",row.names=1)
y=rbind.data.frame(y1,y2)
y$ExacerbatorState<-factor(ifelse(y$Exacerbations<=3,0,1))
data<-data[row.names(y),]
data$ExacerbatorState<-y$ExacerbatorState
rm(y,y1,y2)
# data=read.csv("./Microbes.csv",row.names = 1)
library(foreach)
library(doParallel)
cores=detectCores()
cl <- makeCluster(cores[1])
registerDoParallel(cl)
passed<-foreach(i=colnames(data)[-dim(data)[2]],.combine=c) %dopar% {
t<-wilcox.test(data[[i]]~data[[ExacerbatorState]],exact=TRUE)
if(t$p.value<=args[3]){
i
}
else{
NA
}
}
passed<-foreach(i=colnames(data)[-dim(data)[2]],.combine=c) %dopar% {
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
if(t$p.value<=args[3]){
i
}
else{
NA
}
}
passed<-foreach(i=colnames(data)[-dim(data)[2]],.combine=c) %dopar% {
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
if(t$p.value<=0.1){
i
}
else{
NA
}
}
data<-data[,c(1:50,25501)]
c(1:50,25501)
data[,c(1:50,25501)]
data[,c(1,25501)]
data[,c(1,25500)]
data[,c(1:50,22501)]
data<-data[,c(1:50,22501)]
passed<-foreach(i=colnames(data)[-dim(data)[2]],.combine=c) %dopar% {
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
if(t$p.value<=0.1){
i
}
else{
NA
}
}
data
passed<-foreach(i=colnames(data)[-dim(data)[2]],.combine=c) %dopar% {
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
if(t$p.value<=0.1){
i
}
else{
NA
}
}
passed<-foreach(i=colnames(data)[-dim(data)[2]],.combine=c) %dopar% {
print(i)
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
if(t$p.value<=0.1){
i
}
else{
NA
}
}
passed=c()
for(i in colnames(data)[-dim(data)[2]]){
t<-wilcox.test(data[[i]]~data[[class]],exact=TRUE)
if(t$p.value<=args[3]){passed=c(passed,i)}
}
passed=c()
for(i in colnames(data)[-dim(data)[2]]){
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
if(t$p.value<=args[3]){passed=c(passed,i)}
}
passed=c()
for(i in colnames(data)[-dim(data)[2]]){
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
if(t$p.value<=0.1){passed=c(passed,i)}
}
passed=c()
for(i in colnames(data)[-dim(data)[2]]){
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
print(t)
if(t$p.value<=0.1){passed=c(passed,i)}
}
passed=c()
for(i in colnames(data)[-dim(data)[2]]){
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
print(i)
if(t$p.value<=0.1){passed=c(passed,i)}
}
data$Candida.albicans_Candida.albicans
apply(data,2,var)
sum(apply(data,2,var)<0)
sum(apply(data,2,var)<0,na.rm=TRUE)
sum(apply(data,2,var)<=0,na.rm=TRUE)
apply(data,2,var)
data$ExacerbatorState
data$Serratia.sp..P2ACOL2_Candida.albicans
sum(apply(data,2,var)<=0,na.rm=TRUE)
#Filetring
ind<-(parApply(cl,data, 2, var,na.rm=TRUE)==0)
data<-data[,ind]
sum(apply(data,2,var)<=0,na.rm=TRUE)
data
args = commandArgs(trailingOnly=TRUE)
data<-read.csv("./../Results/Datasets/VI.csv",row.names = 1)
#Exacerbation data
y1=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/METADATA/data_194.csv",row.names=1)
y2=read.csv("/home/jayanth/OneDrive/21.ML_Bronch/Data/METADATA/data_test.csv",row.names=1)
y=rbind.data.frame(y1,y2)
y$ExacerbatorState<-factor(ifelse(y$Exacerbations<=3,0,1))
data<-data[row.names(y),]
data$ExacerbatorState<-y$ExacerbatorState
rm(y,y1,y2)
# data=read.csv("./Microbes.csv",row.names = 1)
library(foreach)
library(doParallel)
cores=detectCores()
cl <- makeCluster(cores[1])
registerDoParallel(cl)
#Filetring
ind<-(parApply(cl,data, 2, var,na.rm=TRUE)==0)
warnings()
ind
ind[1]
data<-data[,-ind]
#Filetring
ind<-(parApply(cl,data, 2, var,na.rm=TRUE)==0)
warnings()
stopCluster(cl)
stopCluster(cl)
data[,c(1:50,22500)]
data<-data[,c(1:50,22500)]
passed<-foreach(i=colnames(data)[-dim(data)[2]],.combine=c) %dopar% {
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
if(t$p.value<=0.1){
i
}
else{
NA
}
}
passed=c()
for(i in colnames(data)[-dim(data)[2]]){
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
print(i)
if(t$p.value<=0.1){passed=c(passed,i)}
}
passed=c()
for(i in colnames(data)[-dim(data)[2]]){
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
print(i)
print(t)
if(t$p.value<=0.1){passed=c(passed,i)}
}
data$Tropheryma.whipplei_Candida.albicans
var(data$Tropheryma.whipplei_Candida.albicans)
# data=read.csv("./Microbes.csv",row.names = 1)
library(foreach)
library(doParallel)
cores=detectCores()
cl <- makeCluster(cores[1])
registerDoParallel(cl)
#Filetring
ind<-(parApply(cl,data, 2, var,na.rm=TRUE)==0)
data<-data[,-ind]
passed=c()
for(i in colnames(data)[-dim(data)[2]]){
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
print(i)
print(t)
if(t$p.value<=0.1){passed=c(passed,i)}
}
i
data[[i]]
var(data[[i]])
ind
data[,ind]
data[,-ind]
data<-data[,-ind]
#Filetring
ind<-(parApply(cl,data, 2, var,na.rm=TRUE)==0)
data<-data[,-ind]
passed=c()
for(i in colnames(data)[-dim(data)[2]]){
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
print(i)
print(t)
if(t$p.value<=0.1){passed=c(passed,i)}
}
ind
-ind
!ind
data<-data[,!ind]
#Filetring
ind<-(parApply(cl,data, 2, var,na.rm=TRUE)!=0)
data<-data[,ind]
ind
passed=c()
for(i in colnames(data)[-dim(data)[2]]){
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
print(i)
print(t)
if(t$p.value<=0.1){passed=c(passed,i)}
}
warnings()
passed<-foreach(i=colnames(data)[-dim(data)[2]],.combine=c) %dopar% {
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
if(t$p.value<=0.1){
i
}
else{
NA
}
}
passed
passed<-foreach(i=colnames(data)[-dim(data)[2]],.combine=c) %dopar% {
t<-wilcox.test(data[[i]]~data[["ExacerbatorState"]],exact=TRUE)
if(t$p.value<=0.1){
i
}
}
passed
stopCluster(cl)
#Reading the dataset
# data=read.csv("./Microbes.csv",row.names = 1)
library(foreach)
library(doParallel)
library(abind)
df=read.csv("/home/Data_21Dec20/species_data.csv",row.names =1)
y1=read.csv("/home/METADATA/data_194.csv",row.names=1)
y2=read.csv("/home/METADATA/data_test.csv",row.names=1)
df=df/rowSums(df)
y=rbind.data.frame(y1,y2)
y$ExacerbatorState<-factor(ifelse(y$Exacerbations<3,0,1))
data=df[row.names(y),]
?cor.test
?is.na
na.fill
library(lionessR)
#===========Correlation Plot================
library("Hmisc")
?rcorr
p.adjust(c(0.1,NA,NA),method = "fdr")
p.adjust(c(0.1,0.05,NA,NA),method = "fdr")
p.adjust(c(0.1,0.05),method = "fdr")
library(Hmisc)
?rcorr
